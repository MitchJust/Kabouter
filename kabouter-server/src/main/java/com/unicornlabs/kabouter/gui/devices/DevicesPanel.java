/*
 * Copyright 2012 Mitchell Just <mitch.just@gmail.com>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.unicornlabs.kabouter.gui.devices;

import com.unicornlabs.kabouter.devices.DeviceStatus;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Mitchell Just <mitch.just@gmail.com>
 */
public class DevicesPanel extends javax.swing.JPanel implements ListSelectionListener {

    /**
     * Creates new form DevicePanel
     */
    public DevicesPanel() {

        initComponents();
        devicesTable.getSelectionModel().addListSelectionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        devicesTable = new com.unicornlabs.kabouter.gui.devices.DeviceTable();
        deviceInfoPanel1 = new com.unicornlabs.kabouter.gui.devices.DeviceInfoPanel(this);

        setPreferredSize(new java.awt.Dimension(800, 600));

        jScrollPane1.setViewportView(devicesTable);

        deviceInfoPanel1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                deviceInfoPanel1PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deviceInfoPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deviceInfoPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deviceInfoPanel1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_deviceInfoPanel1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_deviceInfoPanel1PropertyChange
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.unicornlabs.kabouter.gui.devices.DeviceInfoPanel deviceInfoPanel1;
    public com.unicornlabs.kabouter.gui.devices.DeviceTable devicesTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent e) {
        
        if(!e.getValueIsAdjusting()) {
            DeviceStatus d = devicesTable.getSelectedDevice();
            deviceInfoPanel1.setSelectedDevice(d);
        }
    }

    public DeviceStatus getSelectedDeviceStatus() {
        return deviceInfoPanel1.getSelectedDeviceStatus();
    }

    

}
